<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
    One for Windows with net8.0-windows TFM, one for MacOS with net8.0-macos and one with net8.0 TFM for Linux.-->
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
	  <PublishAot>true</PublishAot>
	
  </PropertyGroup>

  <PropertyGroup>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <ApplicationIcon>alarm.ico</ApplicationIcon>
  </PropertyGroup>

  <ItemGroup>
    <Resource Include="alarm.ico" />
  </ItemGroup>

	<!--<ItemGroup>
		<RdXmlFile Include="rd.xml" />
	</ItemGroup>-->
	<ItemGroup>
		<None Update="app.manifest">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="rd.xml">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>
  <ItemGroup>
    <PackageReference Include="Avalonia.Desktop" Version="$(AvaloniaVersion)" />
    <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="$(AvaloniaVersion)" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\XTExternalPage\XTExternalPage.csproj" />
  </ItemGroup>
</Project>
